SQL have mainly 5 statements
1.Data Definition Language
2.Data Manipulation Language
3.Transaction Control Language
4.Data Control Language
6.Data Query Language


1>Data Definition Language:---
     It is used to construct,modify and renamee an object from the data base.
     * CREATE
     * RENAME
     * ALTER
     * TRUNCATE
     * DROP

*CREATE:--CREATE TABLE employees (
id SERIAL PRIMARY KEY,
name VARCHAR(100),
department VARCHAR(50),
salary NUMERIC(10, 2)
);

* to view the table with contents \d table_name

*RENAME:--ALTER TABLE employees RENAME TO staff;

*ALTER:-- Used to modify existing database objects.
ALTER TABLE employees ADD COLUMN email VARCHAR(100);
ALTER TABLE employees DROP COLUMN email;
ALTER TABLE employees RENAME COLUMN name TO full_name;
ALTER TABLE employees ALTER COLUMN salary SET NOT NULL;
ALTER TABLE table_name
ALTER COLUMN column_name TYPE new_data_type;

*TRUNCATE:--Used to remove all records from a table, but the table structure remains.
TRUNCATE TABLE employees;

*DROP:--Used to delete database objects.
DROP TABLE employees;
DROP INDEX idx_employees_department;



DML:--DML commands are used to manipulate data stored in database objects.
*INSERT
*UPDATE
*DELETE

*INSERT:--Used to insert new records into a table.
INSERT INTO employees (name, department, salary) VALUES ('John Doe', 'Engineering', 75000);

*UPDATE:--Used to update existing records in a table.
UPDATE employees SET salary = 80000 WHERE name = 'John Doe';
UPDATE employees SET department = 'HR' WHERE department = 'Human Resources';

*DELETE:--Used to delete records from a table.
DELETE FROM employees WHERE id = 1;
DELETE FROM employees WHERE department = 'Sales';

DCL:--It is used to controll the data flow between users.
*GRANT
*REVOKE

*GRANT:-Used to give privileges to users.
GRANT SELECT, INSERT, UPDATE ON employees TO user_name;
GRANT ALL PRIVILEGES ON DATABASE database_name TO user_name;

*REVOKE:-Used to remove privileges from users.
REVOKE SELECT, INSERT, UPDATE ON employees FROM user_name;
REVOKE ALL PRIVILEGES ON DATABASE database_name FROM user_name;

CONSTRAINTS:----
these are the xtra rules we add to the column or table to ensure the accuracy,reliability and integrity of data in database.
1.CHECK CONSTRAINTS
2.NOT NULL CONSTRAINTS
3.UNIQUE CONSTRAINTS
4.PRIMARY KEY CONSTRAINTS
5.FOREIGN KEY CONSTRAINTS

BASIC QUERIES--------------------------->

1.WAQTD the names of the alst 5 students.
SELECT *
FROM students
ORDER BY id DESC
LIMIT 5;

2.WAQTD the details of the employees who are working in the department 'Marketing'.
 select *
 from employee
 where department='Marketing'

3.WAQTD the names of the employees who doesn't have email id.
SELECT *
FROM employee
WHERE email is null;

4.WAQTD the number students who scored less than 80.
select count(*)
from students
where total_marks<80;



INDEX----->
Indexs are used in relational database to quickly retrive data.
cmd-->CREATE INDEX idx_department ON employees(department);

1.CLUSTERED INDEX:--Clustered indx is the index that will arrange the rows physically in the memory in sorted order.
----searching for a range of values will be fast.
----you can create only one clustered index for one table.
----when the primary key is created automatically the clustered index is created.

cmd to cluster indx-->CLUSTER employees USING idx_department;/CREATE CLUSTERED INDEX emp_indx ON employee(id);


2.NON CLUSTERED INDEX:---
----When unique key is created automatically non clustered index is created.
----It is an index which will not arrange the rows physically in the memory in sorted order.
----searching for the values that are in a range will be fast.
----we can create 999 non clustered index.

cmd to create noonclustered:--CREATE NONCLUSTERED index emp_index ON employee(id).

drop index emp_index on employee.


KEYS:-->
1.CANDIDATE KEY
2.PRIMARY KEY
3.FOREIGHN KEY
4.SUPER KEY
5.COMPOSITE KEY

FUNCTIONS:-->
CREATE OR REPLACE FUNCTION add_numbers(a INT, b INT)
RETURNS INT AS $$
BEGIN
    RETURN a + b;
END;
$$ LANGUAGE plpgsql;
